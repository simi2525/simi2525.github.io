@namespace cristian.simionescu.me

<section class="mt-8 text-center">
    <h2 class="text-3xl font-bold mb-4">Saptamana @WeekNumber</h2>
</section>

<section class="my-4 p-4 rounded-lg shadow-lg bg-opacity-25 bg-white">
    <h2 class="text-2xl font-semibold mb-4">Tema Saptamana @WeekNumber</h2>
    <h3 class="text-xl font-semibold mb-2">@Homework</h3>
    @if(!string.IsNullOrEmpty(AdditionalInformation))
    {
        <h3 class="text-xl font-semibold mb-2">Informatii aditionale: @AdditionalInformation</h3>
    }
    <p class="mb-4">
        Deadline @Deadline
    </p>
    @if(UploadFormLink != null)
    {
        <a href="@UploadFormLink" target="_blank">
            <button class="bg-white hover:bg-gray-300 text-[#000033] font-bold py-2 px-4 rounded transition duration-300">
                Incarca Tema
            </button>
        </a>
    }
</section>


@if(StudentGroups.Any(sg => sg.PresentationStudents.Count>0))
{
<section class="my-4 p-4 rounded-lg shadow-lg bg-opacity-25 bg-white">
    <h2 class="text-2xl font-semibold mb-4">Studenti alesi pentru prezentare la tabla:</h2>
    @foreach (var group in StudentGroups)
    {
        <h3 class="text-xl font-semibold mb-2">Grupa @group.GroupName:</h3>
        <ul class="list-decimal pl-5 mb-4">
            @foreach (var student in group.PresentationStudents)
            {
                <li class="mb-1">@student</li>
            }
        </ul>
    }
</section>
}

@if(StudentGroups.Any(sg => sg.RandomCheckStudents.Count>0))
{

<section class="my-4 p-4 rounded-lg shadow-lg bg-opacity-25 bg-white">
    <h2 class="text-2xl font-semibold mb-4">Studenti alesi aleatoriu pentru verificare tema + neincarcat:</h2>

    <!-- Tab buttons -->
    <div class="border-b border-gray-300 mb-4">
        @foreach (var group in StudentGroups)
        {
            <button class="py-2 px-6 font-semibold hover:bg-gray-100 transition duration-300 @(ActiveGroup == group.GroupName ? "border-b-4 border-blue-500" : "")" 
                    @onclick="() => SetActiveGroup(group.GroupName)">
                @group.GroupName
            </button>
        }
    </div>

    <!-- Tab content -->
    @foreach (var group in StudentGroups)
    {
        <div class="tab-content @(ActiveGroup != group.GroupName ? "hidden" : "")">
            <ul class="list-decimal pl-5 mb-4">
                @foreach (var student in group.RandomCheckStudents)
                {
                    <li class="mb-1">@student</li>
                }
            </ul>
        </div>
    }
</section>
}

@code {
    [Parameter] public int WeekNumber { get; set; }
    [Parameter] public string Homework { get; set; }
    [Parameter] public string UploadFormLink { get; set; }
    [Parameter] public string Deadline { get; set; }
    [Parameter] public string AdditionalInformation { get; set; }
    [Parameter] public List<StudentGroup> StudentGroups { get; set; } = new List<StudentGroup>();

    private string ActiveGroup { get; set; } = "A1"; // Default active group

    protected override void OnParametersSet()
    {
        StudentGroups = StudentGroups.FindAll(sg => sg.RandomCheckStudents.Count > 0 || sg.PresentationStudents.Count > 0).ToList();
    }

    private void SetActiveGroup(string groupName)
    {
        ActiveGroup = groupName;
    }
}
